// <auto-generated />
using Final_Tooling_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Project.Migrations
{
    [DbContext(typeof(ToolDbContext))]
    [Migration("20240505183442_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Final_Tooling_Project.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationDesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ToolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocationId");

                    b.HasIndex("ToolId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Final_Tooling_Project.Models.Tool", b =>
                {
                    b.Property<int>("ToolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("InService")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToolClub")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ToolName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ToolId");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("Final_Tooling_Project.Models.Location", b =>
                {
                    b.HasOne("Final_Tooling_Project.Models.Tool", "Tool")
                        .WithMany("Locations")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("Final_Tooling_Project.Models.Tool", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
